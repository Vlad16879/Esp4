local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local highlights = {}

-- –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MobileHighlighterUltra"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 150, 0, 60)
toggleButton.Position = UDim2.new(0.02, 0, 0.5, -30)
toggleButton.Text = "üåü –í–ö–õ"
toggleButton.TextSize = 20
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.ZIndex = 10
toggleButton.Parent = screenGui

-- –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–æ—Ç–¥–µ–ª—å–Ω–∞—è)
local settingsButton = Instance.new("TextButton")
settingsButton.Name = "SettingsButton"
settingsButton.Size = UDim2.new(0, 60, 0, 60)
settingsButton.Position = UDim2.new(0.02, 160, 0.5, -30)
settingsButton.Text = "‚öô"
settingsButton.TextSize = 20
settingsButton.Font = Enum.Font.SourceSansBold
settingsButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
settingsButton.TextColor3 = Color3.new(1, 1, 1)
settingsButton.ZIndex = 10
settingsButton.Parent = screenGui

-- –ü–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
local settingsFrame = Instance.new("Frame")
settingsFrame.Name = "SettingsPanel"
settingsFrame.Size = UDim2.new(0, 200, 0, 120)
settingsFrame.Position = UDim2.new(0.5, -100, 0.5, -60)
settingsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
settingsFrame.BorderSizePixel = 0
settingsFrame.Visible = false
settingsFrame.ZIndex = 11
settingsFrame.Parent = screenGui

-- –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
local colorButton = Instance.new("TextButton")
colorButton.Name = "ColorButton"
colorButton.Size = UDim2.new(1, -10, 0, 40)
colorButton.Position = UDim2.new(0, 5, 0, 5)
colorButton.Text = "–¶–≤–µ—Ç: üî¥"
colorButton.TextSize = 16
colorButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
colorButton.TextColor3 = Color3.new(1, 1, 1)
colorButton.ZIndex = 12
colorButton.Parent = settingsFrame

local transparencyButton = Instance.new("TextButton")
transparencyButton.Name = "TransparencyButton"
transparencyButton.Size = UDim2.new(1, -10, 0, 40)
transparencyButton.Position = UDim2.new(0, 5, 0, 50)
transparencyButton.Text = "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å: 50%"
transparencyButton.TextSize = 16
transparencyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
transparencyButton.TextColor3 = Color3.new(1, 1, 1)
transparencyButton.ZIndex = 12
transparencyButton.Parent = settingsFrame

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local colors = {
    {emoji = "üî¥", color = Color3.fromRGB(255, 50, 50)},
    {emoji = "üü¢", color = Color3.fromRGB(50, 255, 50)},
    {emoji = "üîµ", color = Color3.fromRGB(50, 50, 255)}
}
local currentColorIndex = 1
local currentTransparency = 0.5
local isHolding = false

-- –§—É–Ω–∫—Ü–∏–∏ –ø–æ–¥—Å–≤–µ—Ç–∫–∏
local function createHighlight(character)
    if not character or character:FindFirstChild("PlayerHighlight") then return end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "PlayerHighlight"
    highlight.Adornee = character
    highlight.FillColor = colors[currentColorIndex].color
    highlight.OutlineColor = Color3.new(1, 1, 1)
    highlight.FillTransparency = currentTransparency
    highlight.Parent = character
    
    return highlight
end

local function updateAllHighlights()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            removeHighlight(plr.Character)
            if toggleButton.Text == "üåü –í–´–ö–õ" then
                highlights[plr] = createHighlight(plr.Character)
            end
        end
    end
end

local function removeHighlight(character)
    if not character then return end
    local highlight = character:FindFirstChild("PlayerHighlight")
    if highlight then highlight:Destroy() end
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
local function toggleSettings()
    settingsFrame.Visible = not settingsFrame.Visible
end

local function cycleColors()
    currentColorIndex = currentColorIndex % #colors + 1
    colorButton.Text = "–¶–≤–µ—Ç: "..colors[currentColorIndex].emoji
    updateAllHighlights()
end

local function cycleTransparency()
    currentTransparency = (currentTransparency + 0.2) % 1
    transparencyButton.Text = "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å: "..math.floor((1-currentTransparency)*100).."%"
    updateAllHighlights()
end

-- –£–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ (0.5 —Å–µ–∫)
local function startHold()
    isHolding = true
    local startTime = os.clock()
    
    while isHolding and os.clock() - startTime < 0.5 do
        task.wait()
    end
    
    if isHolding then
        toggleSettings()
    end
    isHolding = false
end

-- –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
settingsButton.MouseButton1Down:Connect(function()
    task.spawn(startHold)
end)

settingsButton.MouseButton1Up:Connect(function()
    isHolding = false
end)

toggleButton.MouseButton1Click:Connect(function()
    local enabled = toggleButton.Text == "üåü –í–ö–õ"
    toggleButton.Text = enabled and "üåü –í–´–ö–õ" or "üåü –í–ö–õ"
    toggleButton.BackgroundColor3 = enabled and Color3.fromRGB(255, 50, 50) or Color3.fromRGB(0, 170, 255)
    
    if enabled then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character then
                highlights[plr] = createHighlight(plr.Character)
            end
        end
    else
        for _, plr in pairs(Players:GetPlayers()) do
            if plr.Character then
                removeHighlight(plr.Character)
            end
            highlights[plr] = nil
        end
    end
end)

colorButton.MouseButton1Click:Connect(cycleColors)
transparencyButton.MouseButton1Click:Connect(cycleTransparency)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
Players.PlayerAdded:Connect(function(plr)
    plr.CharacterAdded:Connect(function(char)
        if toggleButton.Text == "üåü –í–´–ö–õ" then
            highlights[plr] = createHighlight(char)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(plr)
    if highlights[plr] then
        removeHighlight(plr.Character)
        highlights[plr] = nil
    end
end)
